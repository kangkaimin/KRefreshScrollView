var theTitleView;

var startTouchY = 0, startTouchX = 0;
var hasMoveY = 0,hasMoveX = 0;  
var canOperate = true;
var refreshHeight = 100;

function canRefreshObserver(newValue, oldValue, ownerInstance, instance) { 
  if (newValue != undefined) {
    canOperate = newValue; 
  } 
}

function refreshHeightObserver(newValue, oldValue, ownerInstance, instance) {
  if (newValue != undefined) { 
    refreshHeight = newValue;
  }
}

function touchstart(event, ownerInstance) { 

  if (!canOperate) {
    return true;
  }

  theTitleView = ownerInstance.selectComponent('#refreshTitle');

  var bound = event.touches[0];
  var _x = bound.pageX; 
  var _y = bound.pageY;

  startTouchY = _y;
  startTouchX = _x;

  theTitleView.setStyle({
    'height': 0 + 'px',
  });
  return true;
}

function touchmove(event, ownerInstance) {

  if (!canOperate) {
    return true;
  }

  var bound = event.touches[0];
  var _y = bound.pageY;
  var _x = bound.pageX; 

  // 已经移动的距离
  hasMoveY = (_y - startTouchY);
  hasMoveX = (_x - startTouchX); 

  if (Math.abs(hasMoveY) > Math.abs(hasMoveX) ) {  // 上下滑动
    theTitleView.setStyle({
      'height': hasMoveY + 'px',
      'line-height': (hasMoveY > refreshHeight ? refreshHeight : hasMoveY) + 'px',
      'opacity': (hasMoveY / refreshHeight)
    });
    return false;
  } else {  // 左右滑动 
    return true;
  }

}

function touchend(event, ownerInstance) {
  var bound = event.changedTouches[0];

  var boundX = bound.pageX;
  var boundY = bound.pageY;

  var times = Math.min(boundX, boundY);
  var distanceX = boundX / times;
  var distanceY = boundY / times;

}

function isReady() {
  return "isReady";
}

function bar() {
  return "bar";
}

module.exports = {
  touchmove: touchmove,
  touchend: touchend,
  touchstart: touchstart,
  canRefreshObserver: canRefreshObserver,
  refreshHeightObserver: refreshHeightObserver,
  bar: bar,
  isReady: isReady
}
